@model TimeSheetManagment.Models.TasksModel
@{ ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<h4></h4>


<script src="~/Scripts/jquery.documentvalidate.js"></script>

<link href="~/Scripts/dataTablesScripts/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Scripts/dataTablesScripts/responsive.bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/dataTablesScripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTablesScripts/dataTables.bootstrap4.min.js"></script>
<script src="https://momentjs.com/downloads/moment.js"></script>


<div class="panel panel-default">
    <div class="panel-heading">Add Task Details</div>
    <div class="panel-body">
        @using (Html.BeginForm("Tasks", "Tasks", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
@Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" }) if (ViewBag.Company != null)
                {
<table width="100%">
    <tr>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(a => a.CompanyName, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">


            @Html.DropDownListFor(model => model.CompanyId, ViewBag.Company as SelectList, "--Select Company--", new { @class = "form-control", @id = "ddlCompany" })

        </td>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.ClientName, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">
            @Html.DropDownListFor(x => x.ClientId, new SelectList(" "), "--Select Client--", new { @class = "form-control", @id = "ddlClient" })
            @Html.ValidationMessageFor(a => a.ClientId)
        </td>
    </tr>
    <tr>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.ProjectName, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">
            @Html.DropDownListFor(x => x.ProjectId, new SelectList(" "), "--Select Project--", new { @class = "form-control", @id = "ddlProject" })
            @Html.ValidationMessageFor(a => a.ProjectId)
        </td>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.Modules, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">
            @Html.DropDownListFor(x => x.ModuleId, new SelectList(" "), "--Select Module--", new { @class = "form-control", @id = "ddlModule" })
            @Html.ValidationMessageFor(a => a.ModuleId)
        </td>
    </tr>
    <tr>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.TaskName, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">
            @Html.TextBoxFor(model => model.TaskName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
        </td>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.Description, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </td>
    </tr>

    <tr>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.PlannedStartDate, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">
            @Html.TextBoxFor(model => model.PlannedStartDate, new { @class = "form-control", @onkeypress = "return false;" })
            @Html.ValidationMessageFor(model => model.PlannedStartDate, "", new { @class = "text-danger" })
        </td>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.PlannedEndDate, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:10px !important;">
            @Html.TextBoxFor(model => model.PlannedEndDate, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PlannedEndDate, "", new { @class = "text-danger" })
        </td>
    </tr>

    <tr>
        <td class="col-md-2" style="padding:10px !important;">
            @Html.LabelFor(model => model.PlannedEfforts, new { @class = "manadatory" })
        </td>
        <td class="col-md-3" style="padding:15px !important;">
            @Html.TextBoxFor(model => model.PlannedEfforts, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PlannedEfforts, "", new { @class = "text-danger" })
        </td>
        <td colspan="2">
        </td>
    </tr>
</table> }
<br />
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-0 col-md-12">
                            <input type="submit" value="Save Tasks" class="btn btn-success" />
                        </div>
                    </div>
                </div>}


    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading">Tasks</div>
    <div class="panel-body">

        <table id="tblTaskDetails" class="table table-striped table-bordered dt-responsive" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>Company</th>
                    <th>Client</th>
                    <th>Project</th>
                    <th>Module</th>
                    <th>Task</th>
                    <th>Description</th>
                    <th>Planned Start Date</th>
                    <th>Planned End Date</th>
                    <th>Planned Efforts</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $("#PlannedStartDate").datepicker
            ({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                numberOfMonths: 1,
                changeYear: true,
                yearRange: new Date().getFullYear() + ':' + new Date().getFullYear(),
                onSelect: function (date) {
                    $("#ToDate").prop('disabled', false);
                    var dt = new Date(date);
                    dt.setDate(dt.getDate());
                    $("#ToDate").datepicker("option", "minDate", dt);
                }
            });

        $("#PlannedEndDate").datepicker
            ({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                numberOfMonths: 1,
                changeYear: true,
                yearRange: new Date().getFullYear() + ':' + new Date().getFullYear(),
                onSelect: function (date) {
                    $("#ToDate").prop('disabled', false);
                    var dt = new Date(date);
                    dt.setDate(dt.getDate());
                    $("#ToDate").datepicker("option", "minDate", dt);
                }
            });


        $("#ddlCompany").change(function () {
            $.get("/Tasks/GetCompanyWiseClients", { CompanyId: $("#ddlCompany").val() }, function (data) {
                $("#ddlClient").empty();
                $("#ddlProject").empty();
                $("#ddlModule").empty();
                $("#ddlClient").append("<option value='" + "" + "'>" + "--Select Client--" + "</option>")
                $("#ddlProject").append("<option value='" + "" + "'>" + "--Select Project--" + "</option>")
                $("#ddlModule").append("<option value='" + "" + "'>" + "--Select Module--" + "</option>")
                $.each(data, function (index, row) {
                    $("#ddlClient").append("<option value='" + row.Id + "'>" + row.ClientName + "</option>")
                })
            })
        })

        $("#ddlClient").change(function () {
            $.get("/Tasks/GetClientWiseProjects", { ClientId: $("#ddlClient").val() }, function (data) {
                $("#ddlProject").empty();
                $("#ddlProject").append("<option value='" + "" + "'>" + "--Select Project--" + "</option>")
                $.each(data, function (index, row) {
                    $("#ddlProject").append("<option value='" + row.Id + "'>" + row.ProjectName + "</option>")
                })
            })
        })

        $("#ddlProject").change(function () {
            $.get("/Tasks/GetProjectWiseModules", { ProjectId: $("#ddlProject").val() }, function (data) {
                $("#ddlModule").empty();
                $("#ddlModule").append("<option value='" + "" + "'>" + "--Select Module--" + "</option>")
                $.each(data, function (index, row) {
                    $("#ddlModule").append("<option value='" + row.Id + "'>" + row.Modules + "</option>")
                })
            })
        })

        $("#tblTaskDetails").DataTable({
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false,
            "pageLength": 5,// for disable multiple column at once
            "ajax": {
                "url": "/Tasks/LoadTasksData",
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs":
                [
                    {
                        "targets": [6],
                        render: function (data, type, row) {//data
                            return moment(data).format('DD/MM/YYYY');
                        }
                    },
                    {
                        "targets": [7],
                        render: function (data, type, row) {//data
                            return moment(data).format('DD/MM/YYYY');
                        }
                    }],
            "columns": [
                { "data": "Company", "name": "Company", "autoWidth": true },
                { "data": "Client", "name": "Client", "autoWidth": true },
                { "data": "Project", "name": "Project", "autoWidth": true },
                { "data": "Module", "name": "Module", "autoWidth": true },
                { "data": "Task", "name": "Task", "autoWidth": true },
                { "data": "Description", "Description": "Description", "autoWidth": true },
                { "data": "PlannedStartDate", "name": "PlannedStartDate", "autoWidth": true },
                { "data": "PlannedEndDate", "name": "PlannedEndDate", "autoWidth": true },
                { "data": "PlannedEfforts", "name": "PlannedEfforts", "autoWidth": true }
            ]
        });
    });

</script>
